#include<iostream>
#include<string.h>
using namespace std;
class String {
private:
  char *str;
public:
 String(){
   char *s=new char[1];
   s[0]='\0';
}
String (const char* s){
   str=new char[strlen(s)+1];
   strcpy(str,s);
}
String (const String& other){
   str=new char[strlen(other.str)+1];
  strcpy(str,other.str);
}
~String(){
   delete[]str;
}
String operator +(const String &other){
   char* newstr=new char[strlen(str)+strlen(other.str)+1];
   strcpy(newstr,str);
   strcat(newstr,other.str);
   String temp(newstr);
   delete []newstr;
   return temp;
}
bool operator ==(const String & other){
    return strcmp(str,other.str)==0;
}

char& operator[](int index){
  if(index>0 && index<strlen(str)){
      return str[index];
   }
  static char dummy='\0';
   return dummy;
}

String& operator=(String&other){
    if(this == &other) return *this;
    delete[]str;
    str=new char[strlen(other.str)+1];
    strcpy(str,other.str);
    return *this ;
}

void display(){
   cout<<str<<endl;
}

};

int main(){

 String str1("Hello");
    String str2(" World");
    // Concatenation using overloaded + operator
    String str3 = str1 + str2;
    str3.display();  // Output: Hello World

 return 0;}
